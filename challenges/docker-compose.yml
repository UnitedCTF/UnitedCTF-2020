version: "3.7"
services:
    aes-client:
        build: ./crypto/aes-client
        restart: unless-stopped
        ports:
            - 3000:3000

    aes-ctr:
        build: ./crypto/aes-ctr
        restart: unless-stopped
        ports:
            - 3001:3000

    aes-ecb-cut-paste:
        build: ./crypto/aes-ecb-cut-paste
        restart: unless-stopped
        ports:
            - 3002:3000

    aes-ecb-byte-per-byte:
        build: ./crypto/aes-ecb-byte-per-byte
        restart: unless-stopped
        ports:
            - 3003:3000

    init-socket:
        build: ./programming/init-socket
        restart: unless-stopped
        ports:
            - 3004:3000

    init-json:
        build: ./programming/init-json
        restart: unless-stopped
        ports:
            - 3005:3000

    maze:
        build: ./programming/maze
        restart: unless-stopped
        ports:
            - 3006:3000

    cmd-injection:
        build: ./web/cmd-injection
        restart: unless-stopped
        ports:
            - 3007:5000
        ulimits:
            nproc: 2000

    la_molecule_pwn:
        build: ./pwning/la_molecule
        restart: unless-stopped
        image: la_molecule_pwn
        volumes:
            - ./pwning/la_molecule/la_molecule:/home/molecule/la_molecule:ro
            - ./pwning/la_molecule/xinetd:/etc/xinetd.d/xinetd:ro
        ports:
            - 16999:8888
        ulimits:
            nproc: 2048

    solve-math:
        build: ./programming/solve-math
        restart: unless-stopped
        ports:
            - 4001:3000

    hash-breaker:
        build: ./programming/hash-breaker
        restart: unless-stopped
        ports:
            - 4002:3000

    captcha-reader:
        build: ./programming/captcha-reader
        restart: unless-stopped
        ports:
            - 4003:3000

    la_goutte_pwn:
        build: ./pwning/la_goutte
        restart: unless-stopped
        image: la_goutte_pwn
        volumes:
            - ./pwning/la_goutte/la_goutte:/home/goutte/la_goutte:ro
            - ./pwning/la_goutte/xinetd:/etc/xinetd.d/xinetd:ro
        ports:
            - 17000:8888
        ulimits:
            nproc: 2048

    le_ruisseau_pwn:
        build: ./pwning/le_ruisseau/
        restart: unless-stopped
        image: le_ruisseau_pwn
        volumes:
            - ./pwning/le_ruisseau/le_ruisseau:/home/ruisseau/le_ruisseau:ro
            - ./pwning/le_ruisseau/xinetd:/etc/xinetd.d/xinetd:ro
        ports:
            - 17001:8888

    le_lac_pwn:
        build: ./pwning/le_lac
        restart: unless-stopped
        image: le_lac_pwn
        volumes:
            - ./pwning/le_lac/le_lac:/home/lac/le_lac:ro
            - ./pwning/le_lac/xinetd:/etc/xinetd.d/xinetd:ro
            - ./pwning/le_lac/flag:/flag:ro
        ports:
            - 17002:8888
        ulimits:
            nproc: 2048

    sqli_db:
        build: ./web/sqli/sqli_db
        restart: unless-stopped
        env_file:
            - ./web/sqli/sqli_db/.env
            - ./web/sqli/sqli_db/db.env
        volumes:
            - ./web/sqli/sqli_db/init_sql:/init_sql:ro
        networks:
            - sqli-net

    sqli_web:
        build: ./web/sqli/sqli_web/
        restart: unless-stopped
        depends_on:
            - sqli_db
        ports:
            - 18000:80
        volumes:
            - ./web/sqli/sqli_web/src:/var/www/html
        env_file: ./web/sqli/sqli_db/.env
        environment:
            DB_HOST: sqli_db
        networks:
            - sqli-net

    web-101:
        build: ./web/web-101
        restart: unless-stopped
        ports:
            - "12000:80"
        volumes:
            - "./web/web-101/src/:/var/www/html"

    web-javascript:
        image: php:7.4.7-apache
        restart: unless-stopped
        ports:
            - "12001:80"
        volumes:
            - "./web/JavaScript/src/:/var/www/html"

    web-vous-pensez-passer-vos-intras:
        build: ./web/vous-pensez-passer-vos-intras
        restart: unless-stopped
        ports:
            - "12003:8080"
        volumes:
            - "./src/:/var/www/html"

    unitedctf-sysadmin-base:
        image: unitedctf-sysadmin-base
        build:
            context: ./sysadmin/base
        command: ["/bin/sh", "-c", "echo 'base works' && exit 0"]

    unitedctf-sysadmin-flag0:
        image: unitedctf-sysadmin-flag0
        build:
            context: ./sysadmin/flag0
        command: ["/bin/sh", "-c", "echo 'flag0 works' && exit 0"]
        depends_on:
            - unitedctf-sysadmin-base

    unitedctf-sysadmin-flag1:
        image: unitedctf-sysadmin-flag1
        build:
            context: ./sysadmin/flag1
        command: ["/bin/sh", "-c", "echo 'flag1 works' && exit 0"]
        depends_on:
            - unitedctf-sysadmin-base

    unitedctf-sysadmin-flag2:
        image: unitedctf-sysadmin-flag2
        build:
            context: ./sysadmin/flag2
        command: ["/bin/sh", "-c", "echo 'flag2 works' && exit 0"]
        depends_on:
            - unitedctf-sysadmin-base

    unitedctf-sysadmin-flag3:
        image: unitedctf-sysadmin-flag3
        build:
            context: ./sysadmin/flag3
        command: ["/bin/sh", "-c", "echo 'flag3 works' && exit 0"]
        depends_on:
            - unitedctf-sysadmin-base

    unitedctf-sysadmin-flag4:
        image: unitedctf-sysadmin-flag4
        build:
            context: ./sysadmin/flag4
        command: ["/bin/sh", "-c", "echo 'flag4 works' && exit 0"]
        depends_on:
            - unitedctf-sysadmin-base

    unitedctf-sysadmin-flag5:
        image: unitedctf-sysadmin-flag5
        build:
            context: ./sysadmin/flag5
        command: ["/bin/sh", "-c", "echo 'flag5 works' && exit 0"]
        depends_on:
            - unitedctf-sysadmin-base

    unitedctf-sysadmin-flag6:
        image: unitedctf-sysadmin-flag6
        build:
            context: ./sysadmin/flag6
        command: ["/bin/sh", "-c", "echo 'flag6 works' && exit 0"]
        depends_on:
            - unitedctf-sysadmin-base

    unitedctf-sysadmin-flag7:
        image: unitedctf-sysadmin-flag7
        build:
            context: ./sysadmin/flag7
        command: ["/bin/sh", "-c", "echo 'flag7 works' && exit 0"]
        depends_on:
            - unitedctf-sysadmin-base

    unitedctf-sysadmin-flag8:
        image: unitedctf-sysadmin-flag8
        build:
            context: ./sysadmin/flag8
        command: ["/bin/sh", "-c", "echo 'flag8 works' && exit 0"]
        depends_on:
            - unitedctf-sysadmin-base

    unitedctf-sysadmin-flag9:
        image: unitedctf-sysadmin-flag9
        build:
            context: ./sysadmin/flag9
        command: ["/bin/sh", "-c", "echo 'flag9 works' && exit 0"]
        depends_on:
            - unitedctf-sysadmin-base

    unitedctf-sysadmin-flag10:
        image: unitedctf-sysadmin-flag10
        build:
            context: ./sysadmin/flag10
        command: ["/bin/sh", "-c", "echo 'flag10 works' && exit 0"]
        depends_on:
            - unitedctf-sysadmin-base

    unitedctf-sysadmin-spawner:
        image: unitedctf-sysadmin-spawner
        build:
            context: ./sysadmin/spawner
        hostname: unitedctf-sysadmin-spawner
        restart: unless-stopped
        init: true
        ports:
            - "5022:22"
        volumes:
            # Need to add namespaces
            - /var/run/docker.sock:/var/run/docker.sock
        depends_on:
            - unitedctf-sysadmin-base
            - unitedctf-sysadmin-flag1
            - unitedctf-sysadmin-flag2
            - unitedctf-sysadmin-flag3
            - unitedctf-sysadmin-flag4
            - unitedctf-sysadmin-flag5
            - unitedctf-sysadmin-flag6
            - unitedctf-sysadmin-flag7
            - unitedctf-sysadmin-flag8
            - unitedctf-sysadmin-flag9
            - unitedctf-sysadmin-flag10

networks:
    sqli-net:
